glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link = "logit"),
lambda = 10,
data = mydata,
final.re = FALSE,
control = list(index = c(NA, 1:9, NA, 10:18, center = FALSE)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link = "logit"),
lambda = 10,
data = mydata,
final.re = FALSE,
control = list(index = 1:20, center = FALSE)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link = "logit"),
lambda = 10,
data = mydata,
final.re = FALSE,
control = list(index = 1:20, center = FALSE))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link = "logit"),
lambda = 10,
data = mydata,
final.re = FALSE,
control = list(index = c(NA, 1:18, NA), center = FALSE))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link = "logit"),
lambda = 0,
data = mydata,
final.re = FALSE,
control = list(index = c(NA, 1:18, NA), center = FALSE))
form.fixed <- as.formula(y ~ as.factor(studyid) + age +  gender + diabetes + stable_cad + multivessel + ladtreated + overlap + m_dia_above_3 + num_stent + age:treat +  gender:treat + diabetes:treat + stable_cad:treat + multivessel:treat + ladtreated:treat + overlap:treat + m_dia_above_3:treat + num_stent:treat + treat)
form.rnd <- list(studyid =~ -1 + treat)
Ncovariate <- 9
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link = "logit"),
lambda = 0,
data = mydata,
final.re = FALSE,
control = list(index = c(NA, 1:18, NA), center = FALSE))
form.fixed <- as.formula(y ~ as.factor(studyid) + age +  gender + diabetes + stable_cad + multivessel + ladtreated + overlap + m_dia_above_3 + num_stent + age:treat +  gender:treat + diabetes:treat + stable_cad:treat + multivessel:treat + ladtreated:treat + overlap:treat + m_dia_above_3:treat + num_stent:treat + treat)
form.rnd <- list(studyid =~ -1 + treat)
Ncovariate <- 9
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link = "logit"),
lambda = 0,
data = mydata,
final.re = FALSE,
control = list(index = c(NA, 1:18, NA)))
form.fixed <- as.formula(y ~ as.factor(studyid) + age +  gender + diabetes + stable_cad + multivessel + ladtreated + overlap + m_dia_above_3 + num_stent + age:treat +  gender:treat + diabetes:treat + stable_cad:treat + multivessel:treat + ladtreated:treat + overlap:treat + m_dia_above_3:treat + num_stent:treat + treat)
form.rnd <- list(studyid =~ -1 + treat)
Ncovariate <- 9
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link = "logit"),
lambda = 5,
data = mydata,
final.re = FALSE,
control = list(index = c(NA, 1:18, NA)))
1:2*4
cv.glmmLasso <- function(data_glmmLasso, form.fixed = NULL, form.rnd = NULL, lambda = NULL, family = NULL){
N <-dim(data_glmmLasso)[1]
ind<-sample(N,N)
kk<-5 # 5 fold cross-validation
nk <- floor(N/kk)
Devianz_ma<-matrix(Inf,ncol=kk,nrow=length(lambda))
for(j in 1:length(lambda)){
print(paste("Iteration ", j,sep=""))
for (i in 1:kk)
{
if (i < kk){
indi <- ind[(i-1)*nk+(1:nk)]
} else{
indi <- ind[((i-1)*nk+1):N]
}
data_glmmLasso_train <- data_glmmLasso[-indi,]
data_glmmLasso_test <- data_glmmLasso[indi,]
glm2 <- try(glmmLasso(form.fixed, rnd = form.rnd,
family = family,
lambda = lambda[j],
data = data_glmmLasso_train,
final.re = FALSE,
control = list(index = c(NA, 1:((dim(data_glmmLasso)[2] - 3) *2), NA), center = FALSE))
,silent=TRUE)
if(class(glm2)!="try-error")
{
y.hat<-predict(glm2,data_glmmLasso_test)
Devianz_ma[j,i]<-sum(family$dev.resids(data_glmmLasso_test$y,y.hat,wt=rep(1,length(y.hat))))
}
}
}
Devianz_vec<-apply(Devianz_ma,1,sum)
opt2<-which.min(Devianz_vec)
print(Devianz_vec)
print(opt2)
glm2 <- try(glmmLasso(form.fixed, rnd = form.rnd,
family = family,
lambda = lambda[opt2],
data = data_glmmLasso_train,
final.re = FALSE,
control = list(index = c(NA, 1:((dim(data_glmmLasso)[2] - 3) *2), NA), center = FALSE))
,silent=TRUE)
glm2
}
form.fixed <- as.formula(y ~ as.factor(studyid) + age +  gender + diabetes + stable_cad + multivessel + ladtreated + overlap + m_dia_above_3 + num_stent + age:treat +  gender:treat + diabetes:treat + stable_cad:treat + multivessel:treat + ladtreated:treat + overlap:treat + m_dia_above_3:treat + num_stent:treat + treat)
form.rnd <- list(studyid =~ -1 + treat)
cv.fit <- cv.glmmLasso(mydata, form.fixed = form.fixed, form.rnd = form.rnd, lambda = seq(100, 0,
by = -5), family = binomial(link = "logit"))
cv.fit
cv.glmmLasso <- function(data_glmmLasso, form.fixed = NULL, form.rnd = NULL, lambda = NULL, family = NULL){
N <-dim(data_glmmLasso)[1]
ind<-sample(N,N)
kk<-5 # 5 fold cross-validation
nk <- floor(N/kk)
Devianz_ma<-matrix(Inf,ncol=kk,nrow=length(lambda))
for(j in 1:length(lambda)){
print(paste("Iteration ", j,sep=""))
for (i in 1:kk)
{
if (i < kk){
indi <- ind[(i-1)*nk+(1:nk)]
} else{
indi <- ind[((i-1)*nk+1):N]
}
data_glmmLasso_train <- data_glmmLasso[-indi,]
data_glmmLasso_test <- data_glmmLasso[indi,]
glm2 <- try(glmmLasso(form.fixed, rnd = form.rnd,
family = family,
lambda = lambda[j],
data = data_glmmLasso_train,
final.re = FALSE,
control = list(index = c(NA, 1:((dim(data_glmmLasso)[2] - 3) *2), NA)))
,silent=TRUE)
if(class(glm2)!="try-error")
{
y.hat<-predict(glm2,data_glmmLasso_test)
Devianz_ma[j,i]<-sum(family$dev.resids(data_glmmLasso_test$y,y.hat,wt=rep(1,length(y.hat))))
}
}
}
Devianz_vec<-apply(Devianz_ma,1,sum)
opt2<-which.min(Devianz_vec)
print(Devianz_vec)
print(lambda[opt2])
glm2 <- try(glmmLasso(form.fixed, rnd = form.rnd,
family = family,
lambda = lambda[opt2],
data = data_glmmLasso_train,
final.re = FALSE,
control = list(index = c(NA, 1:((dim(data_glmmLasso)[2] - 3) *2), NA)))
,silent=TRUE)
glm2
}
form.fixed <- as.formula(y ~ as.factor(studyid) + age +  gender + diabetes + stable_cad + multivessel + ladtreated + overlap + m_dia_above_3 + num_stent + age:treat +  gender:treat + diabetes:treat + stable_cad:treat + multivessel:treat + ladtreated:treat + overlap:treat + m_dia_above_3:treat + num_stent:treat + treat)
form.rnd <- list(studyid =~ -1 + treat)
cv.fit <- cv.glmmLasso(mydata, form.fixed = form.fixed, form.rnd = form.rnd, lambda = seq(100, 0,
by = -5), family = binomial(link = "logit"))
cv.fit
glmmLasso(form.fixed, rnd = form.rnd,
family = family,
lambda = 100,
data = data_glmmLasso_train,
final.re = FALSE,
control = list(index = c(1:9, NA, NA, 10:18)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(family = "logit"),
lambda = 100,
data = mydata,
final.re = FALSE,
control = list(index = c(1:9, NA, NA, 10:18)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 100,
data = mydata,
final.re = FALSE,
control = list(index = c(1:9, NA, NA, 10:18)))
form.fixed <- as.formula(y ~ as.factor(studyid) + age +  gender + diabetes + stable_cad + multivessel + ladtreated + overlap + m_dia_above_3 + num_stent + age:treat +  gender:treat + diabetes:treat + stable_cad:treat + multivessel:treat + ladtreated:treat + overlap:treat + m_dia_above_3:treat + num_stent:treat + treat)
form.rnd <- list(studyid =~ -1 + treat)
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 100,
data = mydata,
final.re = FALSE,
control = list(index = c(NA, 1:18, NA)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 100,
data = mydata,
final.re = FALSE,
control = list(index = c(NA, 1:9, NA, 10:18)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 300,
data = mydata,
final.re = FALSE,
control = list(index = c(NA, 1:9, NA, 10:18)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 500,
data = mydata,
final.re = FALSE,
control = list(index = c(NA, 1:9, NA, 10:18)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 1000,
data = mydata,
final.re = FALSE,
control = list(index = c(NA, 1:9, NA, 10:18)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 5000,
data = mydata,
final.re = FALSE,
control = list(index = c(NA, 1:9, NA, 10:18)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 5000,
data = mydata,
final.re = FALSE,
control = list(index = c(NA, 1:9, NA, 11:18)))
form.fixed <- as.formula(y ~ as.factor(studyid) + age +  gender + diabetes + stable_cad + multivessel + ladtreated + overlap + m_dia_above_3 + num_stent + age:treat +  gender:treat + diabetes:treat + stable_cad:treat + multivessel:treat + ladtreated:treat + overlap:treat + m_dia_above_3:treat + num_stent:treat + treat)
form.rnd <- list(studyid =~ -1 + treat)
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 100,
data = mydata,
final.re = FALSE,
control = list(index = c(NA, 1:9, NA, 10:18)))
form.fixed <- as.formula(y ~ as.factor(studyid) + age +  gender + diabetes + stable_cad + multivessel + ladtreated + overlap + m_dia_above_3 + num_stent + age:treat +  gender:treat + diabetes:treat + stable_cad:treat + multivessel:treat + ladtreated:treat + overlap:treat + m_dia_above_3:treat + num_stent:treat + treat)
form.rnd <- list(studyid =~ -1 + treat)
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 100,
data = mydata,
final.re = FALSE,
control = list(index = c(1:9, NA, NA, 10:18)))
form.fixed <- as.formula(y ~ as.factor(studyid) + age +  gender + diabetes + stable_cad + multivessel + ladtreated + overlap + m_dia_above_3 + num_stent + age:treat +  gender:treat + diabetes:treat + stable_cad:treat + multivessel:treat + ladtreated:treat + overlap:treat + m_dia_above_3:treat + num_stent:treat + treat)
form.rnd <- list(studyid =~ -1 + treat)
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 500,
data = mydata,
final.re = FALSE,
control = list(index = c(1:9, NA, NA, 10:18)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 500,
data = mydata,
final.re = FALSE,
control = list(index = c(NA, 1:19)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 50000,
data = mydata,
final.re = FALSE,
control = list(index = c(NA, 1:19)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 50000,
data = mydata,
final.re = FALSE,
control = list(index = c(1, NA, 2:19)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 50000,
data = mydata,
final.re = FALSE,
control = list(index = c(1, NA, NA, 2:19)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 50000,
data = mydata,
final.re = FALSE,
control = list(index = c(1, NA, NA, 2:18)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 50000,
data = mydata,
final.re = FALSE,
control = list(index = c(1:20)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 50000,
data = mydata,
final.re = FALSE,
control = list(index = c(1:19,NA)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 50000,
data = mydata,
final.re = FALSE,
control = list(index = c(NA, 1:9, NA, 2:18)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 50000,
data = mydata,
final.re = FALSE,
control = list(index = c(NA, 1:19)))
data_glmmLasso <- model.matrix(y~ -1 + (age + gender + diabetes + stable_cad + multivessel + ladtreated + overlap + m_dia_above_3  + num_stent)*treat, data = mydata)
data_glmmLasso <- cbind(y = mydata$y, data_glmmLasso = data_glmmLasso, studyid = mydata$studyid)
colnames(data_glmmLasso) <- gsub(":", "_", colnames(data_glmmLasso))
data_glmmLasso <- as.data.frame(data_glmmLasso)
data_glmmLasso$studyid <- as.factor(data_glmmLasso$studyid)
form.fixed <- as.formula(y ~ as.factor(studyid) + age +  gender + diabetes + stable_cad + multivessel + ladtreated + overlap + m_dia_above_3 + num_stent + age_treat +  gender_treat + diabetes_treat + stable_cad_treat + multivessel_treat + ladtreated_treat + overlap_treat + m_dia_above_3_treat + num_stent_treat + treat)
form.rnd <- list(studyid =~ -1 + treat)
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 50000,
data = data_glmmLasso,
final.re = FALSE,
control = c(NA, 1:((dim(data_glmmLasso)[2] - 3)), NA))
form.fixed <- as.formula(y ~ as.factor(studyid) + age +  gender + diabetes + stable_cad + multivessel + ladtreated + overlap + m_dia_above_3 + num_stent + age_treat +  gender_treat + diabetes_treat + stable_cad_treat + multivessel_treat + ladtreated_treat + overlap_treat + m_dia_above_3_treat + num_stent_treat + treat)
form.rnd <- list(studyid =~ -1 + treat)
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 50000,
data = data_glmmLasso,
final.re = FALSE,
control = c(NA, 1:((dim(data_glmmLasso)[2] - 3)), NA))
form.rnd
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 50000,
data = data_glmmLasso,
final.re = FALSE,
control = c(NA, 1:((dim(data_glmmLasso)[2] - 3)), NA))
is.list(form.rnd)
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 100,
data = data_glmmLasso,
final.re = FALSE,
control = c(NA, 1:((dim(data_glmmLasso)[2] - 3)), NA))
data_glmmLasso <- model.matrix(y~ -1 + (age + gender + diabetes + stable_cad + multivessel + ladtreated + overlap + m_dia_above_3  + num_stent)*treat, data = mydata)
data_glmmLasso <- cbind(y = mydata$y, data_glmmLasso = data_glmmLasso, studyid = mydata$studyid)
colnames(data_glmmLasso) <- gsub(":", "_", colnames(data_glmmLasso))
data_glmmLasso <- as.data.frame(data_glmmLasso)
data_glmmLasso$studyid <- as.factor(data_glmmLasso$studyid)
form.fixed <- as.formula(y ~ as.factor(studyid) + age +  gender + diabetes + stable_cad + multivessel + ladtreated + overlap + m_dia_above_3 + num_stent + age_treat +  gender_treat + diabetes_treat + stable_cad_treat + multivessel_treat + ladtreated_treat + overlap_treat + m_dia_above_3_treat + num_stent_treat + treat)
form.rnd <- list(studyid =~ -1 + treat)
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 100,
data = data_glmmLasso,
final.re = FALSE,
control = c(NA, 1:((dim(data_glmmLasso)[2] - 3)), NA))
data_glmmLasso
str(data_glmmLasso)
form.rnd <- list(studyid =~ -1 + treat)
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 100,
data = data_glmmLasso,
final.re = FALSE,
control = c(NA, 1:((dim(data_glmmLasso)[2] - 3)), NA))
glmmLasso(form.fixed, rnd = list(form.rnd),
family = binomial(link= "logit"),
lambda = 100,
data = data_glmmLasso,
final.re = FALSE,
control = c(NA, 1:((dim(data_glmmLasso)[2] - 3)), NA))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 100,
data = data_glmmLasso,
final.re = FALSE,
control = list(index = c(NA, 1:((dim(data_glmmLasso)[2] - 3)), NA)))
glmmLasso(form.fixed, rnd = form.rnd,
family = binomial(link= "logit"),
lambda = 10000,
data = data_glmmLasso,
final.re = FALSE,
control = list(index = c(NA, 1:((dim(data_glmmLasso)[2] - 3)), NA)))
data_glmmLasso <- model.matrix(y~ -1 + (age + gender + diabetes + stable_cad + multivessel + ladtreated + overlap + m_dia_above_3  + num_stent)*treat, data = mydata)
data_glmmLasso <- cbind(y = mydata$y, data_glmmLasso = data_glmmLasso, studyid = mydata$studyid)
colnames(data_glmmLasso) <- gsub(":", "_", colnames(data_glmmLasso))
data_glmmLasso <- as.data.frame(data_glmmLasso)
data_glmmLasso$studyid <- as.factor(data_glmmLasso$studyid)
str(data_glmmLasso)
form.fixed <- as.formula(y ~ as.factor(studyid) + age +  gender + diabetes + stable_cad + multivessel + ladtreated + overlap + m_dia_above_3 + num_stent + age_treat +  gender_treat + diabetes_treat + stable_cad_treat + multivessel_treat + ladtreated_treat + overlap_treat + m_dia_above_3_treat + num_stent_treat + treat)
form.rnd <- list(studyid =~ -1 + treat)
cv.glmmLasso <- function(data_glmmLasso, form.fixed = NULL, form.rnd = NULL, lambda = NULL, family = NULL){
N <-dim(data_glmmLasso)[1]
ind<-sample(N,N)
kk<-5 # 5 fold cross-validation
nk <- floor(N/kk)
Devianz_ma<-matrix(Inf,ncol=kk,nrow=length(lambda))
for(j in 1:length(lambda)){
print(paste("Iteration ", j,sep=""))
for (i in 1:kk)
{
if (i < kk){
indi <- ind[(i-1)*nk+(1:nk)]
} else{
indi <- ind[((i-1)*nk+1):N]
}
data_glmmLasso_train <- data_glmmLasso[-indi,]
data_glmmLasso_test <- data_glmmLasso[indi,]
glm2 <- try(glmmLasso(form.fixed, rnd = form.rnd,
family = family,
lambda = lambda[j],
data = data_glmmLasso_train,
final.re = FALSE,
control = list(index = c(NA, 1:((dim(data_glmmLasso)[2] - 3)), NA)))
,silent=TRUE)
if(class(glm2)!="try-error")
{
y.hat<-predict(glm2,data_glmmLasso_test)
Devianz_ma[j,i]<-sum(family$dev.resids(data_glmmLasso_test$y,y.hat,wt=rep(1,length(y.hat))))
}
}
}
Devianz_vec<-apply(Devianz_ma,1,sum)
opt2<-which.min(Devianz_vec)
print(Devianz_vec)
print(lambda[opt2])
glm2 <- try(glmmLasso(form.fixed, rnd = form.rnd,
family = family,
lambda = lambda[opt2],
data = data_glmmLasso_train,
final.re = FALSE,
control = list(index = c(NA, 1:((dim(data_glmmLasso)[2] - 3)), NA)))
,silent=TRUE)
glm2
}
cv.fit <- cv.glmmLasso(data_glmmLasso, form.fixed = form.fixed, form.rnd = form.rnd, lambda = seq(100, 0,
by = -5), family = binomial(link = "logit"))
cv.fit
summary(cv.fit)
cv.fit$StdDev
a = 1
print("lambda value is ", a)
print(paste0("lambda value is ", a))
# Setting directory
setwd("C:/Users/ms19g661/Desktop")
#setwd("C:/Users/mike/Desktop")
#load/save everything else from/to github
setwd("~/GitHub/phd/varselect")
#setwd("C:/Users/mike/Desktop/Github/jags/LASSO")
source("helpful.functions.R")
library(MASS) # Used for data simulation
library(lme4) #for fitting glmm
library(glmnet) #for lasso
library(glmmLasso) #for glmmLasso
library(dclone) # for parallel processing of JAGS code
niter <- 1000 #number of simulation to run
col_labels <- c(paste0("X", 1:10), paste0("X", 1:10, ":treat"), "treat") # first simulation data
col_labels2 <- c(paste0("X", 1:20), paste0("X", 1:20, ":treat"), "treat") # second
col_labels_glmmLasso <- c(paste0("X", 1:10), paste0("X", 1:10, "_treat"), "treat")
col_labels_glmmLasso2 <- c(paste0("X", 1:20), paste0("X", 1:20, "_treat"), "treat")
correct_em <- c(rep(0, 3), rep(1, 2), rep(0, 5))
correct_em2 <- c(rep(0, 6), rep(1, 4), rep(0, 10))
correct_em_values <- c(0, 0, 0, 0.2, 0.3, 0, 0, 0, 0, 0)
correct_em_values2 <- c(rep(0, 6), 0.2, 0.3, -0.1, -0.2, rep(0, 10))
# setup for parallel computing
n.cores <- 3
cl <- makePSOCKcluster(n.cores)
tmp <- clusterEvalQ(cl, library(dclone))
i =1
set.seed(i)
data <-generate.simulation()
m1 <- lmer(y ~ -1 + studyid + treat + (-1 + treat|studyid), data = mydata)
str(data)
m1 <- lmer(y ~ -1 + studyid + (-1 + treat|studyid), data = mydata)
m1 <- lmer(y ~ -1 + studyid + treat + (-1 + treat|studyid), data = mydata)
summary(m1)
m1 <- lmer(y ~ -1 + studyid + treat + (-1 + treat|studyid), data = data)
summary(m1)
data
str(data)
m1 <- lmer(y ~ -1 + studyid + treat + (-1 + treat|studyid), data = data)
summary(m1)
data$studyid
str(data)
sapply(col_labels[-c(1:10)], function(x) ifelse(x %in% variable.names(m1), summary(m1)$coef[x,"Estimate"], 0))
m1 <- lmer(y ~ -1 + studyid + treat + (-1 + treat|studyid), data = data)
sapply(col_labels[-c(1:10)], function(x) ifelse(x %in% variable.names(m1), summary(m1)$coef[x,"Estimate"], 0))
variable.names(m1)
m1
summary(m1)
str(m1)
fixef(m1)
variable.names(fixef(m1))
names(fixef(m1))
sapply(col_labels[-c(1:10)], function(x) ifelse(x %in% names(fixef(m1)), summary(m1)$coef[x,"Estimate"], 0))
glmm_null_store_mse1 <- matrix(NA, nrow = niter, ncol = 3)
glmm_null_store_sd1 <- rep(NA, niter)
for(i in seq(niter)){
set.seed(i)
data <-generate.simulation()
m1 <- lmer(y ~ -1 + studyid + treat + (-1 + treat|studyid), data = data)
mse_null <- sapply(col_labels[-c(1:10)], function(x) ifelse(x %in% names(fixef(m1)), summary(m1)$coef[x,"Estimate"], 0))
glmm_null_store_mse1[i,] <- find_performance2(mse_null, correct_em_values, correct_em)
glmm_null_store_sd1[i] <- summary(m1)$coef["treat", "Std. Error"]
}
data <-generate.simulation()
m1 <- lmer(y ~ -1 + studyid + treat + (-1 + treat|studyid), data = data)
summary(m1)
glmm_null_store_mse1 <- matrix(NA, nrow = niter, ncol = 3)
glmm_null_store_sd1 <- rep(NA, niter)
for(i in seq(niter)){
set.seed(i)
data <-generate.simulation()
m1 <- lmer(y ~ -1 + studyid + treat + (-1 + treat|studyid), data = data)
mse_null <- sapply(col_labels[-c(1:10)], function(x) ifelse(x %in% names(fixef(m1)), summary(m1)$coef[x,"Estimate"], 0))
glmm_null_store_mse1[i,] <- find_performance2(mse_null, correct_em_values, correct_em)
glmm_null_store_sd1[i] <- summary(m1)$coef["treat", "Std. Error"]
}
data <-generate.simulation()
m1 <- lmer(y ~ studyid + treat + (-1 + treat|studyid), data = data)
sumamry(m1)
summary(m1)
m1 <- lmer(y ~ -1 + studyid + treat + (-1 + treat|studyid), data = data)
summary(m1)
